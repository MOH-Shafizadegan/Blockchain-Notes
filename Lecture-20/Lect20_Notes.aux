\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand*\HyPL@Entry[1]{}
\HyPL@Entry{0<</S/D>>}
\providecommand \oddpage@label [2]{}
\HyPL@Entry{1<</S/D>>}
\pgfsyspdfmark {pgfid1}{4025872}{43485761}
\pgfsyspdfmark {pgfid2}{6935668}{37980737}
\pgfsyspdfmark {pgfid3}{36232565}{37980737}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Privacy for Smart Contracts}{2}{chapter.1}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{loa}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}Introduction}{2}{section.1.1}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {1.1}{\ignorespaces UTXO model was introduced in Bitcoin. However, it leads to information leakage. Zcash employs zk-SNARKs to shield the information on the payment’s origin, destination, or amount in a payment transaction.}}{3}{figure.1.1}\protected@file@percent }
\newlabel{fig:f1}{{1.1}{3}{UTXO model was introduced in Bitcoin. However, it leads to information leakage. Zcash employs zk-SNARKs to shield the information on the payment’s origin, destination, or amount in a payment transaction}{figure.1.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.2}{\ignorespaces Bitcoin offers neither privacy nor programmability. It avails simple scripts that can be used for writing only the payment transactions. On the other hand, Zcash offers complete privacy but no programmability. In contrast to that, Ethereum offers high degree of programmability but no privacy. Currently, there is no deployed blockchain ecosystem that offers both privacy and programmability. }}{4}{figure.1.2}\protected@file@percent }
\newlabel{fig:f2}{{1.2}{4}{Bitcoin offers neither privacy nor programmability. It avails simple scripts that can be used for writing only the payment transactions. On the other hand, Zcash offers complete privacy but no programmability. In contrast to that, Ethereum offers high degree of programmability but no privacy. Currently, there is no deployed blockchain ecosystem that offers both privacy and programmability}{figure.1.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.3}{\ignorespaces An entity buys Ether from a cryptocurrency exchange such as Coinbase. Then, using smart contract, it successfully executes an arbitrage opportunity that involves exchanging Ether for ZKS and ZKS for COMP in Uniswap and then, COMP for Ether in Sushiswap. After that, the entity exchanges the Ether for USD in Coinbase. However, Coinbase has full access to the real-world identity of this entity (through the "know your customer" (KYC) process). }}{4}{figure.1.3}\protected@file@percent }
\newlabel{fig:f3}{{1.3}{4}{An entity buys Ether from a cryptocurrency exchange such as Coinbase. Then, using smart contract, it successfully executes an arbitrage opportunity that involves exchanging Ether for ZKS and ZKS for COMP in Uniswap and then, COMP for Ether in Sushiswap. After that, the entity exchanges the Ether for USD in Coinbase. However, Coinbase has full access to the real-world identity of this entity (through the "know your customer" (KYC) process)}{figure.1.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.4}{\ignorespaces In the initial scenario, every aspect of the transaction is openly accessible to the public. This mirrors the current privacy state observed in Ethereum and similar blockchain ecosystems based on smart contracts. A modest degree of privacy enhancement can be attained by concealing solely the sender's and recipient's addresses within the transaction. The pinnacle of privacy is achieved when every component of a transaction is cloaked, yet the transaction itself remains auditable and verifiable. }}{5}{figure.1.4}\protected@file@percent }
\newlabel{fig:f4}{{1.4}{5}{In the initial scenario, every aspect of the transaction is openly accessible to the public. This mirrors the current privacy state observed in Ethereum and similar blockchain ecosystems based on smart contracts. A modest degree of privacy enhancement can be attained by concealing solely the sender's and recipient's addresses within the transaction. The pinnacle of privacy is achieved when every component of a transaction is cloaked, yet the transaction itself remains auditable and verifiable}{figure.1.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.2}Key Idea}{6}{section.1.2}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {1.5}{\ignorespaces  how a node can utilize a privacy-preserving blockchain like Zcash to achieve user privacy in an account-based ecosystem like Ethereum. }}{7}{figure.1.5}\protected@file@percent }
\newlabel{fig:f5}{{1.5}{7}{how a node can utilize a privacy-preserving blockchain like Zcash to achieve user privacy in an account-based ecosystem like Ethereum}{figure.1.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.6}{\ignorespaces  In a privacy-preserving blockchain like Zcash, some of the input and output UTXOs in a transaction can be shielded and some of the other input and output UTXOs can be public. }}{7}{figure.1.6}\protected@file@percent }
\newlabel{fig:f6}{{1.6}{7}{In a privacy-preserving blockchain like Zcash, some of the input and output UTXOs in a transaction can be shielded and some of the other input and output UTXOs can be public}{figure.1.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.3}Construction}{7}{section.1.3}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {1.7}{\ignorespaces  Each block can contain three types of transactions - privacy-preserving transactions, bridging transactions and programmable transactions. }}{8}{figure.1.7}\protected@file@percent }
\newlabel{fig:f7}{{1.7}{8}{Each block can contain three types of transactions - privacy-preserving transactions, bridging transactions and programmable transactions}{figure.1.7}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.8}{\ignorespaces  Pictorial illustration of the two types of bridging transactions: the first one decreases the assets/tokens in the account of the smart contract and atomically outputs shielded UTXOs in the privacy-preserving side, the second one involves spending unspent UTXOs in the privacy -preserving side and outputting a public output that increments the account of the smart contract in the programmability-side. Both these transactions must be executed atomically. }}{8}{figure.1.8}\protected@file@percent }
\newlabel{fig:f8}{{1.8}{8}{Pictorial illustration of the two types of bridging transactions: the first one decreases the assets/tokens in the account of the smart contract and atomically outputs shielded UTXOs in the privacy-preserving side, the second one involves spending unspent UTXOs in the privacy -preserving side and outputting a public output that increments the account of the smart contract in the programmability-side. Both these transactions must be executed atomically}{figure.1.8}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.9}{\ignorespaces  Privacy bridge preserves the privacy of the addresses in the privacy-preserving side that funded and received assets from the smart contract in the programmability-side. }}{9}{figure.1.9}\protected@file@percent }
\newlabel{fig:f9}{{1.9}{9}{Privacy bridge preserves the privacy of the addresses in the privacy-preserving side that funded and received assets from the smart contract in the programmability-side}{figure.1.9}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.4}References}{10}{section.1.4}\protected@file@percent }
\ttl@finishall
